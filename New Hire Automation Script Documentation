# New Hire Automation Script Documentation

## ⚠️ IMPORTANT WARNING

This documentation describes a **sample** automation script intended as a reference implementation. This script CANNOT be used as-is in your environment. To implement this in your organization:

1. **Environment-Specific Updates Required**: 
   - Server names
   - Domain names
   - File paths
   - Group names
   - Security policies
   
2. **Security Review Needed**:
   - Credential handling
   - Permission levels
   - Compliance requirements
   
3. **Integration Requirements**:
   - Your specific Active Directory structure
   - Email system configuration
   - SharePoint/Teams setup
   - Phone system integration
   
4. **Testing Required**:
   - Sandbox environment testing
   - User acceptance testing
   - Security testing
   - Error handling verification

Please engage your IT team or qualified consultants to properly adapt this script for your environment.

## Overview

The New Hire Automation Script automates the IT onboarding process for new employees. This documentation explains the script's functionality for those unfamiliar with PowerShell programming.

## Key Features

### 1. Account Creation
- Creates Active Directory (AD) user accounts
- Sets up Microsoft 365 email accounts
- Assigns software licenses
- Creates necessary folders
- Configures phone systems
- Adds users to security groups
- Sends notification emails

### 2. Process Flow
1. **Information Gathering**
   - Reads new hire data from SharePoint
   - Processes approved hires starting within 21 days
   - Handles expedited cases immediately

2. **License Management**
   - Checks available licenses
   - Verifies license availability
   - Tracks usage and requests
   - Alerts when licenses are low

3. **Account Setup**
   - Generates unique usernames
   - Creates AD accounts
   - Sets up M365 accounts
   - Configures mailboxes
   - Sets permissions

4. **Group Configuration**
   - Adds to department groups
   - Sets security permissions
   - Configures distribution lists
   - Sets up Teams access

## Function Reference

### Core Functions

#### `NewHire`
Main orchestration function that:
- Coordinates onboarding workflow
- Manages process execution
- Handles error checking
- Updates status tracking

#### `AD-Account`
Account creation function that:
```plaintext
INPUT: New hire information object
OUTPUT: Configured AD account
```
- Creates AD account
- Sets basic attributes
- Places in correct OU
- Returns account status

#### `License-Check` and `License-Count`
License management functions:
```plaintext
INPUT: User requirements
OUTPUT: License availability status
```
- Track available licenses
- Verify availability
- Monitor usage
- Send alerts

### Setup Functions

#### `MailboxSettings`
```plaintext
INPUT: User email address
OUTPUT: Configured mailbox
```
- Creates Exchange mailbox
- Sets permissions
- Configures forwarding
- Applies retention policies

#### `Set-LogonScript`
```plaintext
INPUT: User department and location
OUTPUT: Assigned logon script
```
- Assigns scripts based on:
  - Department
  - Location
  - Role
  - Requirements

#### `AD-Office`
```plaintext
INPUT: Office location
OUTPUT: Configured location settings
```
- Sets address
- Configures region
- Assigns resources
- Updates contact info

### Group Management

#### `Add-ADGroups`
```plaintext
INPUT: User info and group requirements
OUTPUT: Updated group memberships
```
- Manages:
  - Department groups
  - Role-based access
  - Team memberships
  - Security permissions

#### `AD-changes`
```plaintext
INPUT: User modifications
OUTPUT: Updated AD attributes
```
- Updates:
  - Custom attributes
  - Email addresses
  - User properties
  - Access requirements

### User Management

#### `Username-Check`
```plaintext
INPUT: First and last name
OUTPUT: Unique username
```
- Ensures unique names
- Follows conventions
- Handles duplicates
- Creates alternatives

#### `new-ADUserWithHomeFolder`
```plaintext
INPUT: Username
OUTPUT: Configured home folder
```
- Creates folder
- Sets permissions
- Maps drives
- Sets quotas

#### `Manage-ADUserMobilePhone`
```plaintext
INPUT: Phone configuration
OUTPUT: Updated phone settings
```
- Configures:
  - Extensions
  - Mobile numbers
  - Visibility
  - Phone attributes

### Support Functions

#### `change-physicaladdress`
```plaintext
INPUT: Location info
OUTPUT: Updated address settings
```
- Updates:
  - Office address
  - Regional settings
  - Timezone
  - Printer access

#### `Email-Notification`
```plaintext
INPUT: Notification requirements
OUTPUT: Sent notifications
```
- Sends:
  - Setup notifications
  - License alerts
  - Manager updates
  - Welcome emails

## Common Questions

### Q: How long does it take?
**A:** 15-30 minutes per user, varying with system response times.

### Q: What if something fails?
**A:** The script:
- Retries failed operations
- Logs errors
- Sends notifications
- Cleans up partial setups

### Q: Can it handle multiple new hires?
**A:** Yes, processes multiple hires in one run.

## Important Notes

1. **Modifications**: Only authorized IT staff should modify scripts.

2. **Monitoring**: Process requires oversight despite automation.

3. **Manual Tasks**: Some items need manual handling:
   - Specialized software setup
   - Custom permissions
   - Unique situations

4. **Support**: Contact IT for process issues.

## Manual Process Cases

Use manual process when:
- Unique requirements exist
- Persistent errors occur
- Emergency access needed
- Custom configs required

## Scalability and Extensibility

This script is designed with modularity and scalability in mind:

### Adding New Functions
- Each function is self-contained and follows a consistent pattern
- New functions can be added without modifying existing code
- Common dependencies are handled by core functions

### Examples of Possible Extensions:
1. **System Integrations**
   - Hardware inventory systems
   - Badge access systems
   - Training platforms
   - Time tracking systems

2. **Custom Workflows**
   - Department-specific setups
   - Role-based configurations
   - Location-specific requirements
   - Compliance processes

3. **Additional Automation**
   - Software installation
   - Resource provisioning
   - Security monitoring
   - Compliance reporting

### Integration Points
```plaintext
Core Script
├── Authentication Functions
├── User Management Functions
├── Resource Management Functions
└── Extension Points
    ├── Pre-processing hooks
    ├── Post-processing hooks
    ├── Custom workflows
    └── Integration modules
```

### Adding New Features
To add functionality:
1. Create new function following existing patterns
2. Add error handling and logging
3. Include in main workflow where needed
4. Document new capabilities

## Support Contact

For assistance:
1. Review documentation
2. Contact IT Support
3. Escalate to IT Management

---

